replicaCount: 2

podDisruptionBudget:
  maxUnavailable: 1

updateStrategy:
  type: RollingUpdate

image:
  repository: bodsch/docker-go-carbon
  tag: 0.12.0
  pullPolicy: IfNotPresent

service:
  type: ClusterIP
  annotations: {}
    ## AWS example for use with LoadBalancer service type.
    # external-dns.alpha.kubernetes.io/hostname: gocarbon.cluster.local
    # service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    # service.beta.kubernetes.io/aws-load-balancer-internal: "true"
  ports:
    udp:
      port: 2003
      targetPort: udp
      protocol: UDP
    tcp:
      port: 2003
      targetPort: tcp
      protocol: TCP
    pickle:
      port: 2004
      targetPort: pickle
      protocol: TCP
    carbonlink:
      port: 7002
      targetPort: carbonlink
      protocol: TCP
    grpc:
      port: 7003
      targetPort: grpc
      protocol: TCP
    pprof:
      port: 7007
      targetPort: pprof
      protocol: TCP
    carbonserver:
      port: 8080
      targetPort: carbonserver
      protocol: TCP
ports:
  - name: udp
    containerPort: 2003
    protocol: UDP
  - name: tcp
    containerPort: 2003
    protocol: TCP
  - name: pickle
    containerPort: 2004
    protocol: TCP
  - name: carbonlink
    containerPort: 7002
    protocol: TCP
  - name: grpc
    containerPort: 7003
    protocol: TCP
  - name: pprof
    containerPort: 7007
    protocol: TCP
  - name: carbonserver
    containerPort: 8080
    protocol: TCP

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - gocarbon.cluster.local
  tls: []
  #  - secretName: gocarbon-tls
  #    hosts:
  #      - gocarbon.cluster.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
  # podAntiAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - topologyKey: "kubernetes.io/hostname"
  #       labelSelector:
  #         matchLabels:
  #           release: gocarbon

## Enable persistence using Persistent Volume Claims
## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
##
persistence:
  enabled: true
  storageClassName: standard
  accessModes: ReadWriteOnce
  size: 10Gi

podAnnotations: {}

podLabels: {}
  # team: "developers"
  # service: "gocarbon"

livenessProbe:
  httpGet:
    path: /metrics/find/?query=*&format=json
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  httpGet:
    path: /metrics/find/?query=*&format=json
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 10
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

volumeMounts:
  - name: storage
    mountPath: "/srv"
